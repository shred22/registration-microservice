server:
  port: 7887
  # The format used for the keystore. It could be set to JKS in case it is a JKS file
  ssl:
    key-store-type: JKS
  # The path to the keystore containing the certificate
    key-store: classpath:ssl/ssl-httprest-server.jks
  # The password used to generate the certificate
    key-store-password: storepassword
  # The alias mapped to the certificate
    key-alias: server-ssl
    enabled: true
    key-password: keypassword

spring:
  jta:
    enabled: true
    service: com.atomikos.icatch.standalone.UserTransactionServiceFactory
    max-actives: 200
    enable-logging: true
    atomikos:
      datasource:
        unique-resource-name: dataSourceOne
        max-pool-size: 5
        min-pool-size: 1
        max-life-time: 20000
        borrow-connection-timeout: 10000
        xa-data-source-class-name: com.mysql.cj.jdbc.MysqlXADataSource
        xa-properties:
          user: dockdevuser
          password: password
          URL: jdbc:mysql://docker-mysql/bootdb?useSSL=false
  jpa:
    hibernate:
      ddl-auto: update
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    show-sql: true
  redis:
    host: docker-redis
    port: 6379
    password:
    lettuce:
      pool:
        max-active: 7
        max-idle: 7
        max-wait: 100ms
        min-idle: 2
        shutdown-timeout: 2000ms
  cache:
    type: redis
    redis:
      use-key-prefix: false
      cache-null-values: false

  jackson:
    serialization:
      write-dates-as-timestamps: false

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS

regservice:
  jwt:
    keystorePassword: storepassword
    privatekeyPassword: keypassword
    signingKeyStore: ssl/signing-keys.jks
    verificationKeyStore: verification-keys.jks
    signing:
      alias: regservice-jwt-signing